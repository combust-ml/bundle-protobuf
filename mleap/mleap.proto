syntax = "proto3";

package ml.combust.mleap.pb;

import "bundle.proto";

enum SelectMode {
  SELECT_MODE_UNKNOWN = 0;
  SELECT_MODE_STRICT = 1;
  SELECT_MODE_RELAXED = 2;
}

message TransformOptions {
  repeated string select = 1;
  SelectMode select_mode = 2;
}

enum TransformStatus {
  // Transform was successful
  STATUS_OK = 0;

  // There was an error during the transform
  STATUS_ERROR = 1;
}

message BundleMeta {
  ml.bundle.Bundle bundle = 1;
  ml.bundle.Schema input_schema = 2;
  ml.bundle.Schema output_schema = 3;
}

message GetBundleMetaRequest {
  string uri = 1;
}

message TransformFrameRequest {
  string uri = 1;
  string format = 2;
  bytes frame = 3;
  TransformOptions options = 4;
  uint32 timeout = 5;
}

message TransformFrameResult {
  bytes frame = 1;
  TransformStatus status = 2;
  string error = 3;
}

message TransformRowRequest {
  // Fields that are sent once on stream open
  //   these configure subsequent calls to the
  //   stream, and are ignored after the first call
  string uri = 1;
  string format = 2;
  ml.bundle.Schema schema = 3;
  TransformOptions options = 4;
  uint32 parallelism = 5;

  // Fields that are sent after initializing stream
  uint32 timeout = 6; // timeout in milliseconds to get a result
  bytes row = 7; // data to transform
}

message TransformRowResult {
  bytes row = 1;
  TransformStatus status = 2;
  string error = 3;
}

service Mleap {
  rpc GetBundleMeta (GetBundleMetaRequest) returns (BundleMeta) { }
  rpc TransformFrame (TransformFrameRequest) returns (TransformFrameResult) { }
  rpc TransformRowStream (stream TransformRowRequest) returns (stream TransformRowResult) { }
}

